<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nevergetme.nevergetmeweb.mapper.ArticleMapper">
    <resultMap id="articleResultMap" type="com.nevergetme.nevergetmeweb.bean.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="publishDate" property="publishDate"/>
        <result column="updateDate" property="updateDate"/>
        <result column="likes" property="likes"/>
        <result column="visitTimes" property="visitTimes"/>
        <result column="isStick" property="isStick"/>
        <result column="cover" property="cover"/>
        <association property="author" javaType="com.nevergetme.nevergetmeweb.bean.User">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
        </association>
    </resultMap>

    <resultMap id="articleResultMapList" type="com.nevergetme.nevergetmeweb.bean.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="publishDate" property="publishDate"/>
        <result column="updateDate" property="updateDate"/>
        <result column="likes" property="likes"/>
        <result column="visitTimes" property="visitTimes"/>
        <result column="shortcut" property="shortcut"/>
        <result column="isStick" property="isStick"/>
        <result column="cover" property="cover"/>
        <association property="author" javaType="com.nevergetme.nevergetmeweb.bean.User">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
        </association>
        <collection property="tagsList" column="id" select="com.nevergetme.nevergetmeweb.mapper.ArticleMapper.getTagsByArticleId"/>
    </resultMap>

    <select id="findAllArticleWithoutUserAndTags" resultType="com.nevergetme.nevergetmeweb.bean.Article">
        select * from article
    </select>

    <select id="getAllArticle" resultMap="articleResultMapList">
        select article.id,article.title,article.shortcut,
               DATE_FORMAT(article.publishDate,'%Y-%m-%d') publishDate,
               DATE_FORMAT(article.updateDate,'%Y-%m-%d') updateDate,article.likes,article.visitTimes,article.isStick,article.cover,
               user.id as user_id,user.username
        from article left join user on article.authorId=user.id
        order by isStick desc,article.id desc
    </select>
    <select id="getUserArticle" parameterType="java.lang.Integer" resultType="com.nevergetme.nevergetmeweb.bean.Article">
        select * from article where authorId=#{userid}
    </select>
    <select id="getArticleById" parameterType="java.lang.Integer" resultMap="articleResultMap">
        select article.id,article.title,article.content,
               DATE_FORMAT(article.publishDate,'%Y-%m-%d %H:%i:%s') publishDate,
               DATE_FORMAT(article.updateDate,'%Y-%m-%d %H:%i:%s') updateDate,article.likes,article.isStick,article.cover,
               user.id as user_id,user.username
               from article left join user on article.authorId=user.id where article.id=#{id}
    </select>
    <select id="getTagsByArticleId" parameterType="java.lang.Integer" resultType="com.nevergetme.nevergetmeweb.bean.Tags">
        select articleTags.tagid id,tags.value from articleTags left join tags on articleTags.tagid=tags.id where articleTags.articleid=#{id};
    </select>
    <insert id="createNewArticle" parameterType="com.nevergetme.nevergetmeweb.bean.Article" useGeneratedKeys="true" keyProperty="id">
        insert into article(authorId,title,content,shortcut,isOriginal,cover) values(#{authorId},#{title},#{content},#{shortcut},#{isOriginal},#{cover})
    </insert>
    <select id="getArticleList" resultMap="articleResultMapList">
        select article.id,article.title,article.shortcut,
               DATE_FORMAT(article.publishDate,'%Y-%m-%d') publishDate,
               DATE_FORMAT(article.updateDate,'%Y-%m-%d') updateDate,article.likes,article.visitTimes,article.isStick,article.cover,
               user.id as user_id,user.username
        from article left join user on article.authorId=user.id
        order by isStick desc,article.id desc
    </select>
    <select id="getArticleListByTagId" parameterType="java.lang.Integer" resultMap="articleResultMapList">
        select Z.*,U.id as user_id,U.username from (select A.id,A.title,A.shortcut,
               DATE_FORMAT(A.publishDate,'%Y-%m-%d') publishDate,
               DATE_FORMAT(A.updateDate,'%Y-%m-%d') updateDate,A.likes,A.visitTimes,A.isStick,A.cover,A.authorId
        from articleTags T left join article A on A.id=T.articleid where T.tagid=#{tagid}
        ) Z left join user U on Z.authorId=U.id order by Z.isStick desc,Z.id desc
    </select>
    <select id="getTotalArticleCount" resultType="java.lang.Integer">
        select count(*) from article;
    </select>
    <update id="updateVisitTimes" parameterType="java.lang.Integer">
         update article set visitTimes=visitTimes+1 where id=#{id}
    </update>

    <update id="updateArticleByIdAndUserid" parameterType="com.nevergetme.nevergetmeweb.bean.Article" useGeneratedKeys="true" keyProperty="id">
        update article set content=#{content},title=#{title} where id=#{id} and authorId=#{authorId}
    </update>

    <update id="updateArticleIsStick" parameterType="java.lang.Integer">
        update article set isStick=#{isStick} where id=#{id}
    </update>

    <select id="getAllTags" resultType="com.nevergetme.nevergetmeweb.bean.Tags">
        select * from tags;
    </select>
    <insert id="setArticleTags"  parameterType="java.lang.Integer">
        insert into articleTags(tagid,articleid) values(#{tagid},#{articleId})
    </insert>
    <select id="getStatisticalDataOfPublishDate" resultType="com.nevergetme.nevergetmeweb.bean.PublishDateStatistical">
        select DATE_FORMAT(publishDate,'%Y-%m-%d') publishDate,count(*) dailyCount from article group by DATE_FORMAT(publishDate,'%Y-%m-%d');
    </select>
    <update id="updateArticleCover" parameterType="com.nevergetme.nevergetmeweb.bean.Article">
        update article set cover=#{cover} where id=#{id}
    </update>

    <select id="getArticleListByTitle" parameterType="java.lang.String" resultMap="articleResultMapList">
        select article.id,article.title,article.shortcut,
               DATE_FORMAT(article.publishDate,'%Y-%m-%d') publishDate,
               DATE_FORMAT(article.updateDate,'%Y-%m-%d') updateDate,article.likes,article.visitTimes,article.isStick,article.cover,
               user.id as user_id,user.username
        from article left join user on article.authorId=user.id where article.title like #{contents}
        order by isStick desc,article.id desc
    </select>

<!--    int addSearchHistory(Search search);-->
    <select id="getSearchHistory" resultType="com.nevergetme.nevergetmeweb.bean.Search">
        select * from SearchHistory
    </select>
    <insert id="addSearchHistory" parameterType="com.nevergetme.nevergetmeweb.bean.Search" keyProperty="id" useGeneratedKeys="true">
        insert into SearchHistory(content,times) values(#{content},#{times}) on duplicate key update times=times+1
    </insert>
</mapper>